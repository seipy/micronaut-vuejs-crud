plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "java"
    id "groovy"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
}



//Using the build.gradle from backend created app we update existing subprojects context and plugins
subprojects { project ->

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://jcenter.bintray.com" }
    }
    if(!project.path.contains(':frontend')) {



        apply plugin: "io.spring.dependency-management"
        apply plugin: "application"
        apply plugin: 'com.github.johnrengelman.shadow'


        dependencyManagement {
            imports {
                mavenBom 'io.micronaut:micronaut-bom:1.1.2'
                // mavenBom 'io.micronaut:micronaut-bom:1.0.1'
            }
        }
        //test.classpath += configurations.developmentOnly



        // use JUnit 5 platform
        // test {
        //    useJUnitPlatform()
        // }

        tasks.withType(JavaCompile){
            options.encoding = "UTF-8"
            options.compilerArgs.add('-parameters')
        }


        shadowJar {
            mergeServiceFiles()
        }
       


        //configurations {
            // for dependencies that are needed for development only
        //    developmentOnly
      //  }



        dependencies {

          
          if (project.name=='backend1') {
           apply plugin: "groovy"
            compile "io.micronaut:micronaut-http-client"
    		compile "io.micronaut:micronaut-http-server-netty"
    		compile "io.micronaut:micronaut-runtime-groovy"
    		compile "io.micronaut:micronaut-validation"
    		compileOnly "io.micronaut:micronaut-inject-groovy"
    		runtime "ch.qos.logback:logback-classic:1.2.3"
    		testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    		testCompile "org.junit.jupiter:junit-jupiter-api"
    		testCompile "io.micronaut.test:micronaut-test-junit5"
    		testCompile("org.spockframework:spock-core") {
        		exclude group: "org.codehaus.groovy", module: "groovy-all"
    		}
    		testCompile "io.micronaut:micronaut-inject-groovy"
    		testCompile "io.micronaut.test:micronaut-test-spock"
    		testRuntime "org.junit.jupiter:junit-jupiter-engine"
    
    
          } else {
 apply plugin: "java"
            if (project.name != 'something' && !project.path.contains(':someFunction') && !project.path.contains(':frontend')) {
            
                annotationProcessor "io.micronaut:micronaut-inject-java"
                annotationProcessor "io.micronaut:micronaut-validation"
                compile "io.micronaut:micronaut-inject"
                compile "io.micronaut:micronaut-validation"
                compile "io.micronaut:micronaut-runtime"
                compile "io.micronaut:micronaut-http-client"
                compile "io.micronaut:micronaut-http-server-netty"
                compile 'org.projectlombok:lombok:1.18.2'
                runtime "ch.qos.logback:logback-classic:1.2.3"
                compile "io.micronaut.configuration:micronaut-hibernate-jpa"
                compile "io.micronaut.configuration:micronaut-jdbc-hikari"
                compile "io.micronaut.configuration:micronaut-hibernate-validator"
                runtime "com.h2database:h2"
                runtime "io.micronaut:micronaut-discovery-client"
                testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    
    
            }
          }
        }




        
    }
}

